{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\nimport { unit } from './Theme';\n\nvar InlineList = /*#__PURE__*/function (_PureComponent) {\n  _inherits(InlineList, _PureComponent);\n\n  var _super = _createSuper(InlineList);\n\n  function InlineList() {\n    _classCallCheck(this, InlineList);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InlineList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          align = _this$props.align,\n          children = _this$props.children,\n          styles = _this$props.styles,\n          spacingBetween = _this$props.spacingBetween,\n          verticalAlign = _this$props.verticalAlign;\n      return __jsx(\"div\", css(styles.wrapper, align === 'center' && styles.alignCenter, align === 'right' && styles.alignRight, verticalAlign === 'top' && styles.verticalAlignTop, verticalAlign === 'bottom' && styles.verticalAlignBotttom), React.Children.map(children, function (child) {\n        return __jsx(\"div\", css({\n          marginRight: spacingBetween * unit\n        }), child);\n      }));\n    }\n  }]);\n\n  return InlineList;\n}(PureComponent);\n\nInlineList.defaultProps = {\n  spacingBetween: 1\n};\nexport default withStyles(function () {\n  return {\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    alignCenter: {\n      justifyContent: 'center'\n    },\n    alignRight: {\n      justifyContent: 'flex-end'\n    },\n    verticalAlignTop: {\n      alignItems: 'flex-start'\n    },\n    verticalAlignBottom: {\n      alignItems: 'flex-end'\n    }\n  };\n})(InlineList);","map":null,"metadata":{},"sourceType":"module"}