{"ast":null,"code":"import { hideMessage, SHOW_NOTIFICATION, showMessage } from '../actions/notificationActions';\nimport { debounce } from '../../02/debounce';\nimport { KEY, LIFECYCLE } from 'redux-pack';\nimport { FETCH_TRANSACTION_LIST } from '../actions/transactionPackActions';\nconst debounceRunner = debounce(action => action(), 2000);\nexport default (store => nextRunner => action => {\n  const {\n    type,\n    meta\n  } = action;\n\n  if (meta && meta.notification) {\n    const {\n      success,\n      error\n    } = meta.notification;\n\n    if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      store.dispatch(showMessage(success));\n    } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n      store.dispatch(showMessage(error, true));\n    } else if (type === FETCH_TRANSACTION_LIST && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      const message = '거래 목록을 최신 정보로 업데이트 했습니다.';\n      store.dispatch(showMessage(message));\n    }\n  } else if (type === SHOW_NOTIFICATION) {\n    const hide = () => store.dispatch(hideMessage());\n\n    debounceRunner(hide);\n  }\n\n  return nextRunner(action);\n});","map":null,"metadata":{},"sourceType":"module"}