{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Toast from '../../doit-ui/Toast';\n\nvar Notification = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Notification, _PureComponent);\n\n  var _super = _createSuper(Notification);\n\n  function Notification() {\n    _classCallCheck(this, Notification);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Notification, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          message = _this$props.message,\n          warning = _this$props.warning,\n          showMessage = _this$props.showMessage;\n      return __jsx(React.Fragment, null, showMessage && __jsx(Toast, {\n        message: message,\n        warning: warning\n      }));\n    }\n  }]);\n\n  return Notification;\n}(PureComponent);\n\nexport default Notification;","map":null,"metadata":{},"sourceType":"module"}