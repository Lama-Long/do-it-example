{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { unit } from './Theme';\nimport { css } from '../04/withStyles';\nexport var propTypes = {\n  top: PropTypes.number,\n  left: PropTypes.number,\n  right: PropTypes.number,\n  bottom: PropTypes.number,\n  vertical: PropTypes.number,\n  horizontal: PropTypes.number\n};\n\nvar Spacing = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Spacing, _PureComponent);\n\n  var _super = _createSuper(Spacing);\n\n  function Spacing() {\n    _classCallCheck(this, Spacing);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Spacing, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          top = _this$props.top,\n          left = _this$props.left,\n          right = _this$props.right,\n          bottom = _this$props.bottom,\n          vertical = _this$props.vertical,\n          horizontal = _this$props.horizontal;\n      var computedTop = top ? top : vertical;\n      var computedBottom = bottom ? bottom : vertical;\n      var computedLeft = left ? left : horizontal;\n      var computedRight = right ? right : horizontal;\n\n      var computedStyle = _objectSpread({\n        flex: 1\n      }, computedTop && {\n        marginTop: computedTop * unit\n      }, {}, computedBottom && {\n        marginBottom: computedBottom * unit\n      }, {}, computedLeft && {\n        marginLeft: computedLeft * unit\n      }, {}, computedRight && {\n        marginRight: computedRight * unit\n      });\n\n      return __jsx(\"div\", css(computedStyle), children);\n    }\n  }]);\n\n  return Spacing;\n}(PureComponent);\n\nexport default Spacing;","map":null,"metadata":{},"sourceType":"module"}