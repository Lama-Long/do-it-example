{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_LOCATION } from '../actions/routerActions';\nimport { setFilter } from '../actions/searchFilterActions';\n\nfunction parse(qs) {\n  var quertString = qs.substr(1);\n  var chunks = quertString.split('&');\n  return chunks.map(function (chunk) {\n    return chunk.split('=');\n  }).reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return _objectSpread({}, result, _defineProperty({}, key, value));\n  }, {});\n}\n\nexport default (function (store) {\n  return function (nextRunner) {\n    return function (action) {\n      var type = action.type,\n          payload = action.payload;\n      var result = nextRunner(action);\n\n      if (type === SET_LOCATION) {\n        var _payload$location = payload.location,\n            pathname = _payload$location.pathname,\n            search = _payload$location.search;\n\n        if (pathname === '/') {\n          store.dispatch(setFilter(parse(search)));\n        }\n      }\n\n      return result;\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"module"}