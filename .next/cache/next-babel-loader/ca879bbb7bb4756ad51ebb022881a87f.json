{"ast":null,"code":"import { hideMessage, SHOW_NOTIFICATION, showMessage } from '../actions/notificationActions';\nimport { debounce } from '../../02/debounce';\nimport { KEY, LIFECYCLE } from 'redux-pack';\nimport { FETCH_TRANSACTION_LIST } from '../actions/transactionPackActions';\nvar debounceRunner = debounce(function (action) {\n  return action();\n}, 2000);\nexport default (function (store) {\n  return function (nextRunner) {\n    return function (action) {\n      var type = action.type,\n          meta = action.meta;\n\n      if (meta && meta.notification) {\n        var _meta$notification = meta.notification,\n            success = _meta$notification.success,\n            error = _meta$notification.error;\n\n        if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n          store.dispatch(showMessage(success));\n        } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n          store.dispatch(showMessage(error, true));\n        } else if (type === FETCH_TRANSACTION_LIST && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n          var message = '거래 목록을 최신 정보로 업데이트 했습니다.';\n          store.dispatch(showMessage(message));\n        }\n      } else if (type === SHOW_NOTIFICATION) {\n        var hide = function hide() {\n          return store.dispatch(hideMessage());\n        };\n\n        debounceRunner(hide);\n      }\n\n      return nextRunner(action);\n    };\n  };\n});","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/middlewares/notificationEffects.js"],"names":["hideMessage","SHOW_NOTIFICATION","showMessage","debounce","KEY","LIFECYCLE","FETCH_TRANSACTION_LIST","debounceRunner","action","store","nextRunner","type","meta","notification","success","error","SUCCESS","dispatch","FAILURE","message","hide"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,iBAAtB,EAAyCC,WAAzC,QAA4D,gCAA5D;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,YAA/B;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AAEA,IAAMC,cAAc,GAAGJ,QAAQ,CAAC,UAACK,MAAD;AAAA,SAAYA,MAAM,EAAlB;AAAA,CAAD,EAAuB,IAAvB,CAA/B;AAEA,gBAAe,UAACC,KAAD;AAAA,SAAW,UAACC,UAAD;AAAA,WAAgB,UAACF,MAAD,EAAY;AACpD,UAAQG,IAAR,GAAuBH,MAAvB,CAAQG,IAAR;AAAA,UAAcC,IAAd,GAAuBJ,MAAvB,CAAcI,IAAd;;AACA,UAAIA,IAAI,IAAIA,IAAI,CAACC,YAAjB,EAA+B;AAC7B,iCAA2BD,IAAI,CAACC,YAAhC;AAAA,YAAQC,OAAR,sBAAQA,OAAR;AAAA,YAAiBC,KAAjB,sBAAiBA,KAAjB;;AACA,YAAID,OAAO,IAAIF,IAAI,CAACR,GAAG,CAACC,SAAL,CAAJ,KAAwBA,SAAS,CAACW,OAAjD,EAA0D;AACxDP,UAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,CAACY,OAAD,CAA1B;AACD,SAFD,MAEO,IAAIC,KAAK,IAAIH,IAAI,CAACR,GAAG,CAACC,SAAL,CAAJ,KAAwBA,SAAS,CAACa,OAA/C,EAAwD;AAC7DT,UAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,CAACa,KAAD,EAAQ,IAAR,CAA1B;AACD,SAFM,MAEA,IAAIJ,IAAI,KAAKL,sBAAT,IAAmCM,IAAI,CAACR,GAAG,CAACC,SAAL,CAAJ,KAAwBA,SAAS,CAACW,OAAzE,EAAkF;AACvF,cAAMG,OAAO,GAAG,0BAAhB;AACAV,UAAAA,KAAK,CAACQ,QAAN,CAAef,WAAW,CAACiB,OAAD,CAA1B;AACD;AACF,OAVD,MAUO,IAAIR,IAAI,KAAKV,iBAAb,EAAgC;AACrC,YAAMmB,IAAI,GAAG,SAAPA,IAAO;AAAA,iBAAMX,KAAK,CAACQ,QAAN,CAAejB,WAAW,EAA1B,CAAN;AAAA,SAAb;;AACAO,QAAAA,cAAc,CAACa,IAAD,CAAd;AACD;;AAED,aAAOV,UAAU,CAACF,MAAD,CAAjB;AACD,KAlByB;AAAA,GAAX;AAAA,CAAf","sourcesContent":["import { hideMessage, SHOW_NOTIFICATION, showMessage } from '../actions/notificationActions';\nimport { debounce } from '../../02/debounce';\nimport { KEY, LIFECYCLE } from 'redux-pack';\nimport { FETCH_TRANSACTION_LIST } from '../actions/transactionPackActions';\n\nconst debounceRunner = debounce((action) => action(), 2000);\n\nexport default (store) => (nextRunner) => (action) => {\n  const { type, meta } = action;\n  if (meta && meta.notification) {\n    const { success, error } = meta.notification;\n    if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      store.dispatch(showMessage(success));\n    } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n      store.dispatch(showMessage(error, true));\n    } else if (type === FETCH_TRANSACTION_LIST && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      const message = '거래 목록을 최신 정보로 업데이트 했습니다.';\n      store.dispatch(showMessage(message));\n    }\n  } else if (type === SHOW_NOTIFICATION) {\n    const hide = () => store.dispatch(hideMessage());\n    debounceRunner(hide);\n  }\n\n  return nextRunner(action);\n};\n"]},"metadata":{},"sourceType":"module"}