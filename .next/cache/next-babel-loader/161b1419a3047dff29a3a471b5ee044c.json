{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Select.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\nexport { Option };\n\nvar Select = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Select, _PureComponent);\n\n  var _super = _createSuper(Select);\n\n  function Select() {\n    var _this;\n\n    _classCallCheck(this, Select);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      focused: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocus\", function () {\n      _this.setState({\n        focused: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function () {\n      _this.setState({\n        focused: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n\n      if (onChange) {\n        onChange(name, e.target.value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (ref) {\n      _this.ref = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(Select, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus) {\n        this.ref.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          disabled = _this$props2.disabled,\n          errorMessage = _this$props2.errorMessage,\n          label = _this$props2.label,\n          value = _this$props2.value,\n          name = _this$props2.name,\n          styles = _this$props2.styles,\n          large = _this$props2.large,\n          xlarge = _this$props2.xlarge,\n          small = _this$props2.small,\n          xsmall = _this$props2.xsmall;\n      var focused = this.state.focused;\n      return __jsx(\"fieldset\", _extends({}, css(styles.wrapper), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }), __jsx(\"label\", _extends({\n        htmlFor: \"input_\".concat(name)\n      }, css(styles.label, errorMessage && styles.errorLabel), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), errorMessage || label), __jsx(\"div\", _extends({}, css(styles.placeholder, xsmall && styles.xsmallPadding, small && styles.smallPadding, large && styles.largePadding, xlarge && styles.xlargePadding, focused && styles.focus, errorMessage && styles.error), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), __jsx(\"select\", _extends({}, css(styles.select, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge), {\n        disabled: disabled,\n        id: \"input_\".concat(name),\n        ref: this.setRef,\n        onChange: this.handleChange,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), React.Children.map(children, function (child) {\n        return React.cloneElement(child, {\n          disabled: disabled\n        });\n      }))));\n    }\n  }]);\n\n  return Select;\n}(PureComponent);\n\nSelect.propTypes = _objectSpread({}, withStylesPropTypes, {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\nSelect.defaultProps = {\n  onChange: function onChange() {},\n  autoFocus: false\n};\nexport default withStyles(function (_ref) {\n  var unit = _ref.unit,\n      color = _ref.color,\n      size = _ref.size,\n      lineHeight = _ref.lineHeight;\n  return {\n    wrapper: {\n      border: 0,\n      padding: 0,\n      position: 'relative'\n    },\n    label: {\n      display: 'block',\n      fontSize: size.xs,\n      top: 2,\n      left: unit * 2,\n      cursor: 'pointer'\n    },\n    placeholder: {\n      marginTop: 2,\n      border: 1,\n      borderColor: color.primary,\n      borderStyle: 'solid',\n      borderRadius: 4,\n      padding: unit * 1.5\n    },\n    focus: {\n      boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)'\n    },\n    xlargePadding: {\n      padding: unit * 2\n    },\n    largePadding: {\n      padding: unit * 2\n    },\n    smallPadding: {\n      padding: unit - 1\n    },\n    xsmallPadding: {\n      padding: unit - 2\n    },\n    select: {\n      fontSize: size.md,\n      lineHeight: lineHeight.md,\n      backgroundColor: color.white,\n      border: 0,\n      outline: 0,\n      width: '100%'\n    },\n    xlarge: {\n      fontSize: size.xg\n    },\n    large: {\n      fontSize: size.lg\n    },\n    small: {\n      fontSize: size.sm\n    },\n    errorLabel: {\n      color: color.error\n    },\n    error: {\n      borderColor: color.error\n    }\n  };\n})(Select);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Select.jsx"],"names":["React","PureComponent","PropTypes","Option","css","withStyles","withStylesPropTypes","Select","focused","setState","e","props","name","onChange","target","value","ref","autoFocus","focus","children","disabled","errorMessage","label","styles","large","xlarge","small","xsmall","state","wrapper","errorLabel","placeholder","xsmallPadding","smallPadding","largePadding","xlargePadding","error","select","setRef","handleChange","handleFocus","handleBlur","Children","map","child","cloneElement","propTypes","string","isRequired","oneOfType","number","func","bool","defaultProps","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","borderColor","primary","borderStyle","borderRadius","boxShadow","md","backgroundColor","white","outline","width","xg","lg","sm"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nexport { Option };\n\nclass Select extends PureComponent {\n  state = {\n    focused: false,\n  };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleChange = (e) => {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef = (ref) => {\n    this.ref = ref;\n  };\n\n  render() {\n    const {\n      children,\n      disabled,\n      errorMessage,\n      label,\n      value,\n      name,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n    } = this.props;\n    const { focused } = this.state;\n    return (\n      <fieldset {...css(styles.wrapper)}>\n        <label htmlFor={`input_${name}`} {...css(styles.label, errorMessage && styles.errorLabel)}>\n          {errorMessage || label}\n        </label>\n        <div\n          {...css(\n            styles.placeholder,\n            xsmall && styles.xsmallPadding,\n            small && styles.smallPadding,\n            large && styles.largePadding,\n            xlarge && styles.xlargePadding,\n            focused && styles.focus,\n            errorMessage && styles.error,\n          )}\n        >\n          <select\n            {...css(\n              styles.select,\n              xsmall && styles.xsmall,\n              small && styles.small,\n              large && styles.large,\n              xlarge && styles.xlarge,\n            )}\n            disabled={disabled}\n            id={`input_${name}`}\n            ref={this.setRef}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            value={value}\n          >\n            {React.Children.map(children, (child) => React.cloneElement(child, { disabled }))}\n          </select>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ...withStylesPropTypes,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  onChange: () => {},\n  autoFocus: false,\n};\n\nexport default withStyles(({ unit, color, size, lineHeight }) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative',\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer',\n  },\n  placeholder: {\n    marginTop: 2,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    padding: unit * 1.5,\n  },\n  focus: {\n    boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)',\n  },\n  xlargePadding: {\n    padding: unit * 2,\n  },\n  largePadding: {\n    padding: unit * 2,\n  },\n  smallPadding: {\n    padding: unit - 1,\n  },\n  xsmallPadding: {\n    padding: unit - 2,\n  },\n  select: {\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    backgroundColor: color.white,\n    border: 0,\n    outline: 0,\n    width: '100%',\n  },\n  xlarge: {\n    fontSize: size.xg,\n  },\n  large: {\n    fontSize: size.lg,\n  },\n  small: {\n    fontSize: size.sm,\n  },\n  errorLabel: {\n    color: color.error,\n  },\n  error: {\n    borderColor: color.error,\n  },\n}))(Select);\n"]},"metadata":{},"sourceType":"module"}