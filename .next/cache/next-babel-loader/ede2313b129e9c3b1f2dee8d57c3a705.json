{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/TransactionTable.jsx\";\nvar __jsx = React.createElement;\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../../../doit-ui/Table';\nimport TableHead from '../../../doit-ui/TableHead';\nimport TableRow from '../../../doit-ui/TableRow';\nimport TableCell from '../../../doit-ui/TableCell';\nimport TableBody from '../../../doit-ui/TableBody';\nimport Spacing from '../../../doit-ui/Spacing';\nimport Text from '../../../doit-ui/Text';\nimport withLoading from '../../../05/withLoading';\n\nconst LoadingMessage = __jsx(Spacing, {\n  vertical: 4,\n  horizontal: 2,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }\n}, __jsx(Text, {\n  large: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uB4E4\\uC774\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"));\n\nclass TransactionTable extends PureComponent {\n  render() {\n    const {\n      transactions\n    } = this.props;\n    return __jsx(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, __jsx(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, __jsx(TableCell, {\n      align: \"center\",\n      isHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"ID.\"), __jsx(TableCell, {\n      align: \"center\",\n      isHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"\\uCF54\\uC778\"), __jsx(TableCell, {\n      align: \"right\",\n      isHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"\\uC2DC\\uAC00 \\uCD1D\\uC561\"), __jsx(TableCell, {\n      align: \"right\",\n      isHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"\\uD604\\uC7AC \\uC2DC\\uC138\"), __jsx(TableCell, {\n      align: \"center\",\n      isHeader: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"\\uAC70\\uB798 \\uC2DC\\uAC04\"))), __jsx(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, transactions.map(({\n      id,\n      name,\n      totalPrice,\n      currentPrice,\n      dateTime\n    }) => __jsx(TableRow, {\n      id: id,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, __jsx(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, id), __jsx(TableCell, {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, name), __jsx(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, totalPrice.toLocaleString()), __jsx(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, currentPrice.toLocaleString()), __jsx(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, dateTime)))));\n  }\n\n}\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    totalPrice: PropTypes.number,\n    currentPrice: PropTypes.number,\n    dateTime: PropTypes.string\n  }))\n};\nexport default withLoading(LoadingMessage)(TransactionTable);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/TransactionTable.jsx"],"names":["React","PureComponent","PropTypes","Table","TableHead","TableRow","TableCell","TableBody","Spacing","Text","withLoading","LoadingMessage","TransactionTable","render","transactions","props","map","id","name","totalPrice","currentPrice","dateTime","toLocaleString","propTypes","arrayOf","shape","string","number"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '../../../doit-ui/Table';\nimport TableHead from '../../../doit-ui/TableHead';\nimport TableRow from '../../../doit-ui/TableRow';\nimport TableCell from '../../../doit-ui/TableCell';\nimport TableBody from '../../../doit-ui/TableBody';\nimport Spacing from '../../../doit-ui/Spacing';\nimport Text from '../../../doit-ui/Text';\nimport withLoading from '../../../05/withLoading';\n\nconst LoadingMessage = (\n  <Spacing vertical={4} horizontal={2}>\n    <Text large>데이터를 불러들이고 있습니다.</Text>\n  </Spacing>\n);\n\nclass TransactionTable extends PureComponent {\n  render() {\n    const { transactions } = this.props;\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\" isHeader>\n              ID.\n            </TableCell>\n            <TableCell align=\"center\" isHeader>\n              코인\n            </TableCell>\n            <TableCell align=\"right\" isHeader>\n              시가 총액\n            </TableCell>\n            <TableCell align=\"right\" isHeader>\n              현재 시세\n            </TableCell>\n            <TableCell align=\"center\" isHeader>\n              거래 시간\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {transactions.map(({ id, name, totalPrice, currentPrice, dateTime }) => (\n            <TableRow id={id} key={id}>\n              <TableCell align=\"center\">{id}</TableCell>\n              <TableCell align=\"left\">{name}</TableCell>\n              <TableCell align=\"right\">{totalPrice.toLocaleString()}</TableCell>\n              <TableCell align=\"right\">{currentPrice.toLocaleString()}</TableCell>\n              <TableCell align=\"center\">{dateTime}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  }\n}\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      totalPrice: PropTypes.number,\n      currentPrice: PropTypes.number,\n      dateTime: PropTypes.string,\n    }),\n  ),\n};\n\nexport default withLoading(LoadingMessage)(TransactionTable);\n"]},"metadata":{},"sourceType":"module"}