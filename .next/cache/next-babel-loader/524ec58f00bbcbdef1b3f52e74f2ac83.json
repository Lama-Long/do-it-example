{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/TableCell.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nvar TableCell = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TableCell, _PureComponent);\n\n  var _super = _createSuper(TableCell);\n\n  function TableCell() {\n    _classCallCheck(this, TableCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TableCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          align = _this$props.align,\n          baseline = _this$props.baseline,\n          styles = _this$props.styles,\n          children = _this$props.children,\n          isHeader = _this$props.isHeader;\n      var Tag = isHeader ? 'th' : 'td';\n      return __jsx(Tag, _extends({}, css(styles.cell, isHeader && styles.header, !isHeader && baseline && styles.baseline, align === 'center' && styles.alignCenter, align === 'right' && styles.alignRight), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }\n      }), children);\n    }\n  }]);\n\n  return TableCell;\n}(PureComponent);\n\nTableCell.propTypes = _objectSpread({}, withStylesPropTypes, {\n  align: PropTypes.oneOf(['left', 'right', 'center']),\n  baseline: PropTypes.bool,\n  children: PropTypes.node,\n  isHeader: PropTypes.bool\n});\nTableCell.defaultProps = {\n  baseline: true,\n  isHeader: false\n};\nexport default withStyles(function (_ref) {\n  var color = _ref.color,\n      unit = _ref.unit;\n  return {\n    cell: {\n      paddingTop: unit * 4,\n      paddingBottom: unit * 4,\n      paddingRight: unit * 8,\n      paddingLeft: unit * 8,\n      backgroundColor: color.white,\n      textAlign: 'left'\n    },\n    header: {\n      backgroundColor: color.primary,\n      color: color.white\n    },\n    baseline: {\n      borderBottom: \"1px solid \".concat(color.border)\n    },\n    alignCenter: {\n      textAlign: 'center'\n    },\n    alignRight: {\n      textAlign: 'right'\n    }\n  };\n})(TableCell);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/TableCell.jsx"],"names":["React","PureComponent","PropTypes","css","withStyles","withStylesPropTypes","TableCell","props","align","baseline","styles","children","isHeader","Tag","cell","header","alignCenter","alignRight","propTypes","oneOf","bool","node","defaultProps","color","unit","paddingTop","paddingBottom","paddingRight","paddingLeft","backgroundColor","white","textAlign","primary","borderBottom","border"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,mBAA1B,QAAqD,cAArD;;IAEMC,S;;;;;;;;;;;;;WACF,kBAAS;AACL,wBAAwD,KAAKC,KAA7D;AAAA,UAAQC,KAAR,eAAQA,KAAR;AAAA,UAAeC,QAAf,eAAeA,QAAf;AAAA,UAAyBC,MAAzB,eAAyBA,MAAzB;AAAA,UAAiCC,QAAjC,eAAiCA,QAAjC;AAAA,UAA2CC,QAA3C,eAA2CA,QAA3C;AACA,UAAMC,GAAG,GAAGD,QAAQ,GAAG,IAAH,GAAU,IAA9B;AACA,aACI,MAAC,GAAD,eACQT,GAAG,CACHO,MAAM,CAACI,IADJ,EAEHF,QAAQ,IAAIF,MAAM,CAACK,MAFhB,EAGH,CAACH,QAAD,IAAaH,QAAb,IAAyBC,MAAM,CAACD,QAH7B,EAIHD,KAAK,KAAK,QAAV,IAAsBE,MAAM,CAACM,WAJ1B,EAKHR,KAAK,KAAK,OAAV,IAAqBE,MAAM,CAACO,UALzB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UASKN,QATL,CADJ;AAaH;;;;EAjBmBV,a;;AAoBxBK,SAAS,CAACY,SAAV,qBACOb,mBADP;AAEIG,EAAAA,KAAK,EAAEN,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,EAAkB,QAAlB,CAAhB,CAFX;AAGIV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IAHxB;AAIIT,EAAAA,QAAQ,EAAET,SAAS,CAACmB,IAJxB;AAKIT,EAAAA,QAAQ,EAAEV,SAAS,CAACkB;AALxB;AAQAd,SAAS,CAACgB,YAAV,GAAyB;AACrBb,EAAAA,QAAQ,EAAE,IADW;AAErBG,EAAAA,QAAQ,EAAE;AAFW,CAAzB;AAKA,eAAeR,UAAU,CAAC;AAAA,MAAGmB,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,SAAsB;AAC5CV,IAAAA,IAAI,EAAE;AACFW,MAAAA,UAAU,EAAED,IAAI,GAAG,CADjB;AAEFE,MAAAA,aAAa,EAAEF,IAAI,GAAG,CAFpB;AAGFG,MAAAA,YAAY,EAAEH,IAAI,GAAG,CAHnB;AAIFI,MAAAA,WAAW,EAAEJ,IAAI,GAAG,CAJlB;AAKFK,MAAAA,eAAe,EAAEN,KAAK,CAACO,KALrB;AAMFC,MAAAA,SAAS,EAAE;AANT,KADsC;AAS5ChB,IAAAA,MAAM,EAAE;AACJc,MAAAA,eAAe,EAAEN,KAAK,CAACS,OADnB;AAEJT,MAAAA,KAAK,EAAEA,KAAK,CAACO;AAFT,KAToC;AAa5CrB,IAAAA,QAAQ,EAAE;AACNwB,MAAAA,YAAY,sBAAeV,KAAK,CAACW,MAArB;AADN,KAbkC;AAgB5ClB,IAAAA,WAAW,EAAE;AACTe,MAAAA,SAAS,EAAE;AADF,KAhB+B;AAmB5Cd,IAAAA,UAAU,EAAE;AACRc,MAAAA,SAAS,EAAE;AADH;AAnBgC,GAAtB;AAAA,CAAD,CAAV,CAsBXzB,SAtBW,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nclass TableCell extends PureComponent {\n    render() {\n        const { align, baseline, styles, children, isHeader } = this.props;\n        const Tag = isHeader ? 'th' : 'td';\n        return (\n            <Tag\n                {...css(\n                    styles.cell,\n                    isHeader && styles.header,\n                    !isHeader && baseline && styles.baseline,\n                    align === 'center' && styles.alignCenter,\n                    align === 'right' && styles.alignRight,\n                )}\n            >\n                {children}\n            </Tag>\n        );\n    }\n}\n\nTableCell.propTypes = {\n    ...withStylesPropTypes,\n    align: PropTypes.oneOf(['left', 'right', 'center']),\n    baseline: PropTypes.bool,\n    children: PropTypes.node,\n    isHeader: PropTypes.bool,\n};\n\nTableCell.defaultProps = {\n    baseline: true,\n    isHeader: false,\n};\n\nexport default withStyles(({ color, unit }) => ({\n    cell: {\n        paddingTop: unit * 4,\n        paddingBottom: unit * 4,\n        paddingRight: unit * 8,\n        paddingLeft: unit * 8,\n        backgroundColor: color.white,\n        textAlign: 'left',\n    },\n    header: {\n        backgroundColor: color.primary,\n        color: color.white,\n    },\n    baseline: {\n        borderBottom: `1px solid ${color.border}`,\n    },\n    alignCenter: {\n        textAlign: 'center',\n    },\n    alignRight: {\n        textAlign: 'right',\n    },\n}))(TableCell);\n"]},"metadata":{},"sourceType":"module"}