{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Select.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\nexport { Option };\n\nclass Select extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      focused: false\n    });\n\n    _defineProperty(this, \"handleFocus\", () => {\n      this.setState({\n        focused: true\n      });\n    });\n\n    _defineProperty(this, \"handleBlur\", () => {\n      this.setState({\n        focused: false\n      });\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(name, e.target.value);\n      }\n    });\n\n    _defineProperty(this, \"setRef\", ref => {\n      this.ref = ref;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    const {\n      children,\n      disabled,\n      errorMessage,\n      label,\n      value,\n      name,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall\n    } = this.props;\n    const {\n      focused\n    } = this.state;\n    return __jsx(\"fieldset\", _extends({}, css(styles.wrapper), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), __jsx(\"label\", _extends({\n      htmlFor: `input_${name}`\n    }, css(styles.label, errorMessage && styles.errorLabel), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), errorMessage || label), __jsx(\"div\", _extends({}, css(styles.placeholder, xsmall && styles.xsmallPadding, small && styles.smallPadding, large && styles.largePadding, xlarge && styles.xlargePadding, focused && styles.focus, errorMessage && styles.error), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), __jsx(\"select\", _extends({}, css(styles.select, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge), {\n      disabled: disabled,\n      id: `input_${name}`,\n      ref: this.setRef,\n      onChange: this.handleChange,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), React.Children.map(children, child => React.cloneElement(child, {\n      disabled\n    })))));\n  }\n\n}\n\nSelect.propTypes = _objectSpread({}, withStylesPropTypes, {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\nSelect.defaultProps = {\n  onChange: () => {},\n  autoFocus: false\n};\nexport default withStyles(({\n  unit,\n  color,\n  size,\n  lineHeight\n}) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative'\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer'\n  },\n  placeholder: {\n    marginTop: 2,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    padding: unit * 1.5\n  },\n  focus: {\n    boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)'\n  },\n  xlargePadding: {\n    padding: unit * 2\n  },\n  largePadding: {\n    padding: unit * 2\n  },\n  smallPadding: {\n    padding: unit - 1\n  },\n  xsmallPadding: {\n    padding: unit - 2\n  },\n  select: {\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    backgroundColor: color.white,\n    border: 0,\n    outline: 0,\n    width: '100%'\n  },\n  xlarge: {\n    fontSize: size.xg\n  },\n  large: {\n    fontSize: size.lg\n  },\n  small: {\n    fontSize: size.sm\n  },\n  errorLabel: {\n    color: color.error\n  },\n  error: {\n    borderColor: color.error\n  }\n}))(Select);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Select.jsx"],"names":["React","PureComponent","PropTypes","Option","css","withStyles","withStylesPropTypes","Select","focused","setState","e","name","onChange","props","target","value","ref","componentDidMount","autoFocus","focus","render","children","disabled","errorMessage","label","styles","large","xlarge","small","xsmall","state","wrapper","errorLabel","placeholder","xsmallPadding","smallPadding","largePadding","xlargePadding","error","select","setRef","handleChange","handleFocus","handleBlur","Children","map","child","cloneElement","propTypes","string","isRequired","oneOfType","number","func","bool","defaultProps","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","borderColor","primary","borderStyle","borderRadius","boxShadow","md","backgroundColor","white","outline","width","xg","lg","sm"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Option from './Option';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nexport { Option };\n\nclass Select extends PureComponent {\n  state = {\n    focused: false,\n  };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleChange = (e) => {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef = (ref) => {\n    this.ref = ref;\n  };\n\n  render() {\n    const {\n      children,\n      disabled,\n      errorMessage,\n      label,\n      value,\n      name,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n    } = this.props;\n    const { focused } = this.state;\n    return (\n      <fieldset {...css(styles.wrapper)}>\n        <label htmlFor={`input_${name}`} {...css(styles.label, errorMessage && styles.errorLabel)}>\n          {errorMessage || label}\n        </label>\n        <div\n          {...css(\n            styles.placeholder,\n            xsmall && styles.xsmallPadding,\n            small && styles.smallPadding,\n            large && styles.largePadding,\n            xlarge && styles.xlargePadding,\n            focused && styles.focus,\n            errorMessage && styles.error,\n          )}\n        >\n          <select\n            {...css(\n              styles.select,\n              xsmall && styles.xsmall,\n              small && styles.small,\n              large && styles.large,\n              xlarge && styles.xlarge,\n            )}\n            disabled={disabled}\n            id={`input_${name}`}\n            ref={this.setRef}\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            value={value}\n          >\n            {React.Children.map(children, (child) => React.cloneElement(child, { disabled }))}\n          </select>\n        </div>\n      </fieldset>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ...withStylesPropTypes,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nSelect.defaultProps = {\n  onChange: () => {},\n  autoFocus: false,\n};\n\nexport default withStyles(({ unit, color, size, lineHeight }) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative',\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer',\n  },\n  placeholder: {\n    marginTop: 2,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    padding: unit * 1.5,\n  },\n  focus: {\n    boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)',\n  },\n  xlargePadding: {\n    padding: unit * 2,\n  },\n  largePadding: {\n    padding: unit * 2,\n  },\n  smallPadding: {\n    padding: unit - 1,\n  },\n  xsmallPadding: {\n    padding: unit - 2,\n  },\n  select: {\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    backgroundColor: color.white,\n    border: 0,\n    outline: 0,\n    width: '100%',\n  },\n  xlarge: {\n    fontSize: size.xg,\n  },\n  large: {\n    fontSize: size.lg,\n  },\n  small: {\n    fontSize: size.sm,\n  },\n  errorLabel: {\n    color: color.error,\n  },\n  error: {\n    borderColor: color.error,\n  },\n}))(Select);\n"]},"metadata":{},"sourceType":"module"}