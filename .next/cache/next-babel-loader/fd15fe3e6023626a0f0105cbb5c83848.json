{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Input.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nclass Input extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleChange\", e => {\n      const {\n        name,\n        onChange\n      } = this.props;\n\n      if (onChange) {\n        onChange(name, this.ref.value);\n      }\n    });\n\n    _defineProperty(this, \"setRef\", ref => {\n      this.ref = ref;\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      name,\n      value,\n      type,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall\n    } = this.props;\n    return __jsx(\"fieldset\", _extends({}, css(styles.wrapper), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }), __jsx(\"label\", _extends({\n      htmlFor: `input_${name}`\n    }, css(styles.label, errorMessage && styles.errorLabel), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), errorMessage || label), __jsx(\"input\", _extends({}, css(styles.input, errorMessage && styles.error, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge), {\n      id: `input_${name}`,\n      ref: this.setRef,\n      onChange: this.handleChange,\n      value: value || '',\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nInput.propTypes = _objectSpread({}, withStylesPropTypes, {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\nInput.defaultProps = {\n  onChange: () => {},\n  autoFocus: false\n};\nexport default withStyles(({\n  unit,\n  color,\n  size,\n  lineHeight\n}) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative'\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer'\n  },\n  input: {\n    marginTop: 2,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    padding: unit * 1.5,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    outline: 0,\n    ':focus': {\n      boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)'\n    }\n  },\n  xlarge: {\n    fontSize: size.xg\n  },\n  large: {\n    fontSize: size.lg\n  },\n  small: {\n    fontSize: size.sm,\n    padding: unit\n  },\n  errorLabel: {\n    color: color.error\n  },\n  error: {\n    borderColor: color.error\n  }\n}))(Input);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Input.jsx"],"names":["React","PureComponent","PropTypes","css","withStyles","withStylesPropTypes","Input","e","name","onChange","props","ref","value","componentDidMount","autoFocus","focus","componentDidUpdate","render","errorMessage","label","type","styles","large","xlarge","small","xsmall","wrapper","errorLabel","input","error","setRef","handleChange","propTypes","oneOf","string","isRequired","oneOfType","number","func","bool","defaultProps","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","md","borderColor","primary","borderStyle","borderRadius","outline","boxShadow","xg","lg","sm"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nclass Input extends PureComponent {\n  handleChange = (e) => {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, this.ref.value);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef = (ref) => {\n    this.ref = ref;\n  };\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      name,\n      value,\n      type,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n    } = this.props;\n    return (\n      <fieldset {...css(styles.wrapper)}>\n        <label htmlFor={`input_${name}`} {...css(styles.label, errorMessage && styles.errorLabel)}>\n          {errorMessage || label}\n        </label>\n        <input\n          {...css(\n            styles.input,\n            errorMessage && styles.error,\n            xsmall && styles.xsmall,\n            small && styles.small,\n            large && styles.large,\n            xlarge && styles.xlarge,\n          )}\n          id={`input_${name}`}\n          ref={this.setRef}\n          onChange={this.handleChange}\n          value={value || ''}\n          type={type}\n        />\n      </fieldset>\n    );\n  }\n}\n\nInput.propTypes = {\n  ...withStylesPropTypes,\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  onChange: () => {},\n  autoFocus: false,\n};\n\nexport default withStyles(({ unit, color, size, lineHeight }) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative',\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer',\n  },\n  input: {\n    marginTop: 2,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    padding: unit * 1.5,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    outline: 0,\n    ':focus': {\n      boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)',\n    },\n  },\n  xlarge: {\n    fontSize: size.xg,\n  },\n  large: {\n    fontSize: size.lg,\n  },\n  small: {\n    fontSize: size.sm,\n    padding: unit,\n  },\n  errorLabel: {\n    color: color.error,\n  },\n  error: {\n    borderColor: color.error,\n  },\n}))(Input);\n"]},"metadata":{},"sourceType":"module"}