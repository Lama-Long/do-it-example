{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Text.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles } from './withStyles';\n\nclass Text extends PureComponent {\n  render() {\n    const {\n      children,\n      bold,\n      light,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n      primary,\n      secondary,\n      inverse\n    } = this.props;\n    return __jsx(\"span\", _extends({}, css(styles.default, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge, secondary && styles.secondary, primary && styles.primary, bold && styles.bold, light && styles.light, inverse && styles.inverse), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), children);\n  }\n\n}\n\nText.propTypes = {\n  children: PropTypes.node.isRequired,\n  bold: PropTypes.bool,\n  light: PropTypes.bool,\n  xsmall: PropTypes.bool,\n  small: PropTypes.bool,\n  large: PropTypes.bool,\n  xlarge: PropTypes.bool,\n  secondary: PropTypes.bool,\n  primary: PropTypes.bool,\n  inverse: PropTypes.bool\n};\nexport default withStyles(({\n  color,\n  fontWeight,\n  size,\n  lineHeight\n}) => ({\n  default: {\n    color: color.default,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    fontWeight: fontWeight.normal\n  },\n  xlarge: {\n    fontSize: size.xg,\n    lineHeight: lineHeight.xg\n  },\n  large: {\n    fontSize: size.lg,\n    lineHeight: lineHeight.lg\n  },\n  small: {\n    fontSize: size.sm,\n    lineHeight: lineHeight.sm\n  },\n  xsmall: {\n    fontSize: size.xs,\n    lineHeight: lineHeight.xs\n  },\n  primary: {\n    color: color.primary\n  },\n  secondary: {\n    color: color.secondary\n  },\n  light: {\n    fontWeight: fontWeight.light\n  },\n  bold: {\n    fontWeight: fontWeight.bold\n  },\n  inverse: {\n    color: color.white\n  }\n}))(Text);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Text.jsx"],"names":["React","PureComponent","PropTypes","css","withStyles","Text","render","children","bold","light","styles","large","xlarge","small","xsmall","primary","secondary","inverse","props","default","propTypes","node","isRequired","bool","color","fontWeight","size","lineHeight","fontSize","md","normal","xg","lg","sm","xs","white"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles } from './withStyles';\n\nclass Text extends PureComponent {\n    render() {\n        const {\n            children,\n            bold,\n            light,\n            styles,\n            large,\n            xlarge,\n            small,\n            xsmall,\n            primary,\n            secondary,\n            inverse,\n        } = this.props;\n        return (\n            <span\n                {...css(\n                    styles.default,\n                    xsmall && styles.xsmall,\n                    small && styles.small,\n                    large && styles.large,\n                    xlarge && styles.xlarge,\n                    secondary && styles.secondary,\n                    primary && styles.primary,\n                    bold && styles.bold,\n                    light && styles.light,\n                    inverse && styles.inverse,\n                )}\n            >\n                {children}\n            </span>\n        );\n    }\n}\n\nText.propTypes = {\n    children: PropTypes.node.isRequired,\n    bold: PropTypes.bool,\n    light: PropTypes.bool,\n    xsmall: PropTypes.bool,\n    small: PropTypes.bool,\n    large: PropTypes.bool,\n    xlarge: PropTypes.bool,\n    secondary: PropTypes.bool,\n    primary: PropTypes.bool,\n    inverse: PropTypes.bool,\n};\n\nexport default withStyles(({ color, fontWeight, size, lineHeight }) => ({\n    default: {\n        color: color.default,\n        fontSize: size.md,\n        lineHeight: lineHeight.md,\n        fontWeight: fontWeight.normal,\n    },\n    xlarge: {\n        fontSize: size.xg,\n        lineHeight: lineHeight.xg,\n    },\n    large: {\n        fontSize: size.lg,\n        lineHeight: lineHeight.lg,\n    },\n    small: {\n        fontSize: size.sm,\n        lineHeight: lineHeight.sm,\n    },\n    xsmall: {\n        fontSize: size.xs,\n        lineHeight: lineHeight.xs,\n    },\n    primary: {\n        color: color.primary,\n    },\n    secondary: {\n        color: color.secondary,\n    },\n    light: {\n        fontWeight: fontWeight.light,\n    },\n    bold: {\n        fontWeight: fontWeight.bold,\n    },\n    inverse: {\n        color: color.white,\n    },\n}))(Text);\n"]},"metadata":{},"sourceType":"module"}