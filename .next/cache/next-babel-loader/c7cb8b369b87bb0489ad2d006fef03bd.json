{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Input.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nvar Input = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Input, _PureComponent);\n\n  var _super = _createSuper(Input);\n\n  function Input() {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n\n      if (onChange) {\n        onChange(name, _this.ref.value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setRef\", function (ref) {\n      _this.ref = ref;\n    });\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.autoFocus) {\n        this.ref.focus();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.autoFocus) {\n        this.ref.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          errorMessage = _this$props2.errorMessage,\n          label = _this$props2.label,\n          name = _this$props2.name,\n          value = _this$props2.value,\n          type = _this$props2.type,\n          styles = _this$props2.styles,\n          large = _this$props2.large,\n          xlarge = _this$props2.xlarge,\n          small = _this$props2.small,\n          xsmall = _this$props2.xsmall;\n      return __jsx(\"fieldset\", _extends({}, css(styles.wrapper), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }), __jsx(\"label\", _extends({\n        htmlFor: \"input_\".concat(name)\n      }, css(styles.label, errorMessage && styles.errorLabel), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }), errorMessage || label), __jsx(\"input\", _extends({}, css(styles.input, errorMessage && styles.error, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge), {\n        id: \"input_\".concat(name),\n        ref: this.setRef,\n        onChange: this.handleChange,\n        value: value || '',\n        type: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Input;\n}(PureComponent);\n\nInput.propTypes = _objectSpread({}, withStylesPropTypes, {\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\nInput.defaultProps = {\n  onChange: function onChange() {},\n  autoFocus: false\n};\nexport default withStyles(function (_ref) {\n  var unit = _ref.unit,\n      color = _ref.color,\n      size = _ref.size,\n      lineHeight = _ref.lineHeight;\n  return {\n    wrapper: {\n      border: 0,\n      padding: 0,\n      position: 'relative'\n    },\n    label: {\n      display: 'block',\n      fontSize: size.xs,\n      top: 2,\n      left: unit * 2,\n      cursor: 'pointer'\n    },\n    input: {\n      marginTop: 2,\n      fontSize: size.md,\n      lineHeight: lineHeight.md,\n      padding: unit * 1.5,\n      border: 1,\n      borderColor: color.primary,\n      borderStyle: 'solid',\n      borderRadius: 4,\n      outline: 0,\n      ':focus': {\n        boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)'\n      }\n    },\n    xlarge: {\n      fontSize: size.xg\n    },\n    large: {\n      fontSize: size.lg\n    },\n    small: {\n      fontSize: size.sm,\n      padding: unit\n    },\n    errorLabel: {\n      color: color.error\n    },\n    error: {\n      borderColor: color.error\n    }\n  };\n})(Input);","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Input.jsx"],"names":["React","PureComponent","PropTypes","css","withStyles","withStylesPropTypes","Input","e","props","name","onChange","ref","value","autoFocus","focus","errorMessage","label","type","styles","large","xlarge","small","xsmall","wrapper","errorLabel","input","error","setRef","handleChange","propTypes","oneOf","string","isRequired","oneOfType","number","func","bool","defaultProps","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","md","borderColor","primary","borderStyle","borderRadius","outline","boxShadow","xg","lg","sm"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,mBAA1B,QAAqD,cAArD;;IAEMC,K;;;;;;;;;;;;;;;;mEACW,UAACC,CAAD,EAAO;AACpB,wBAA2B,MAAKC,KAAhC;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,QAAd,eAAcA,QAAd;;AACA,UAAIA,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACD,IAAD,EAAO,MAAKE,GAAL,CAASC,KAAhB,CAAR;AACD;AACF,K;;6DAcQ,UAACD,GAAD,EAAS;AAChB,YAAKA,GAAL,GAAWA,GAAX;AACD,K;;;;;;;WAdD,6BAAoB;AAClB,UAAI,KAAKH,KAAL,CAAWK,SAAf,EAA0B;AACxB,aAAKF,GAAL,CAASG,KAAT;AACD;AACF;;;WAED,8BAAqB;AACnB,UAAI,KAAKN,KAAL,CAAWK,SAAf,EAA0B;AACxB,aAAKF,GAAL,CAASG,KAAT;AACD;AACF;;;WAMD,kBAAS;AACP,yBAWI,KAAKN,KAXT;AAAA,UACEO,YADF,gBACEA,YADF;AAAA,UAEEC,KAFF,gBAEEA,KAFF;AAAA,UAGEP,IAHF,gBAGEA,IAHF;AAAA,UAIEG,KAJF,gBAIEA,KAJF;AAAA,UAKEK,IALF,gBAKEA,IALF;AAAA,UAMEC,MANF,gBAMEA,MANF;AAAA,UAOEC,KAPF,gBAOEA,KAPF;AAAA,UAQEC,MARF,gBAQEA,MARF;AAAA,UASEC,KATF,gBASEA,KATF;AAAA,UAUEC,MAVF,gBAUEA,MAVF;AAYA,aACE,+BAAcnB,GAAG,CAACe,MAAM,CAACK,OAAR,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE;AAAO,QAAA,OAAO,kBAAWd,IAAX;AAAd,SAAqCN,GAAG,CAACe,MAAM,CAACF,KAAR,EAAeD,YAAY,IAAIG,MAAM,CAACM,UAAtC,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGT,YAAY,IAAIC,KADnB,CADF,EAIE,4BACMb,GAAG,CACLe,MAAM,CAACO,KADF,EAELV,YAAY,IAAIG,MAAM,CAACQ,KAFlB,EAGLJ,MAAM,IAAIJ,MAAM,CAACI,MAHZ,EAILD,KAAK,IAAIH,MAAM,CAACG,KAJX,EAKLF,KAAK,IAAID,MAAM,CAACC,KALX,EAMLC,MAAM,IAAIF,MAAM,CAACE,MANZ,CADT;AASE,QAAA,EAAE,kBAAWX,IAAX,CATJ;AAUE,QAAA,GAAG,EAAE,KAAKkB,MAVZ;AAWE,QAAA,QAAQ,EAAE,KAAKC,YAXjB;AAYE,QAAA,KAAK,EAAEhB,KAAK,IAAI,EAZlB;AAaE,QAAA,IAAI,EAAEK,IAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAsBD;;;;EA3DiBhB,a;;AA8DpBK,KAAK,CAACuB,SAAN,qBACKxB,mBADL;AAEEY,EAAAA,IAAI,EAAEf,SAAS,CAAC4B,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CAFR;AAGErB,EAAAA,IAAI,EAAEP,SAAS,CAAC6B,MAAV,CAAiBC,UAHzB;AAIEpB,EAAAA,KAAK,EAAEV,SAAS,CAAC+B,SAAV,CAAoB,CAAC/B,SAAS,CAACgC,MAAX,EAAmBhC,SAAS,CAAC6B,MAA7B,CAApB,CAJT;AAKEhB,EAAAA,YAAY,EAAEb,SAAS,CAAC6B,MAL1B;AAMEf,EAAAA,KAAK,EAAEd,SAAS,CAAC6B,MANnB;AAOErB,EAAAA,QAAQ,EAAER,SAAS,CAACiC,IAPtB;AAQEtB,EAAAA,SAAS,EAAEX,SAAS,CAACkC;AARvB;AAWA9B,KAAK,CAAC+B,YAAN,GAAqB;AACnB3B,EAAAA,QAAQ,EAAE,oBAAM,CAAE,CADC;AAEnBG,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAKA,eAAeT,UAAU,CAAC;AAAA,MAAGkC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,IAAhB,QAAgBA,IAAhB;AAAA,MAAsBC,UAAtB,QAAsBA,UAAtB;AAAA,SAAwC;AAChElB,IAAAA,OAAO,EAAE;AACPmB,MAAAA,MAAM,EAAE,CADD;AAEPC,MAAAA,OAAO,EAAE,CAFF;AAGPC,MAAAA,QAAQ,EAAE;AAHH,KADuD;AAMhE5B,IAAAA,KAAK,EAAE;AACL6B,MAAAA,OAAO,EAAE,OADJ;AAELC,MAAAA,QAAQ,EAAEN,IAAI,CAACO,EAFV;AAGLC,MAAAA,GAAG,EAAE,CAHA;AAILC,MAAAA,IAAI,EAAEX,IAAI,GAAG,CAJR;AAKLY,MAAAA,MAAM,EAAE;AALH,KANyD;AAahEzB,IAAAA,KAAK,EAAE;AACL0B,MAAAA,SAAS,EAAE,CADN;AAELL,MAAAA,QAAQ,EAAEN,IAAI,CAACY,EAFV;AAGLX,MAAAA,UAAU,EAAEA,UAAU,CAACW,EAHlB;AAILT,MAAAA,OAAO,EAAEL,IAAI,GAAG,GAJX;AAKLI,MAAAA,MAAM,EAAE,CALH;AAMLW,MAAAA,WAAW,EAAEd,KAAK,CAACe,OANd;AAOLC,MAAAA,WAAW,EAAE,OAPR;AAQLC,MAAAA,YAAY,EAAE,CART;AASLC,MAAAA,OAAO,EAAE,CATJ;AAUL,gBAAU;AACRC,QAAAA,SAAS,EAAE;AADH;AAVL,KAbyD;AA2BhEtC,IAAAA,MAAM,EAAE;AACN0B,MAAAA,QAAQ,EAAEN,IAAI,CAACmB;AADT,KA3BwD;AA8BhExC,IAAAA,KAAK,EAAE;AACL2B,MAAAA,QAAQ,EAAEN,IAAI,CAACoB;AADV,KA9ByD;AAiChEvC,IAAAA,KAAK,EAAE;AACLyB,MAAAA,QAAQ,EAAEN,IAAI,CAACqB,EADV;AAELlB,MAAAA,OAAO,EAAEL;AAFJ,KAjCyD;AAqChEd,IAAAA,UAAU,EAAE;AACVe,MAAAA,KAAK,EAAEA,KAAK,CAACb;AADH,KArCoD;AAwChEA,IAAAA,KAAK,EAAE;AACL2B,MAAAA,WAAW,EAAEd,KAAK,CAACb;AADd;AAxCyD,GAAxC;AAAA,CAAD,CAAV,CA2CXpB,KA3CW,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { css, withStyles, withStylesPropTypes } from './withStyles';\n\nclass Input extends PureComponent {\n  handleChange = (e) => {\n    const { name, onChange } = this.props;\n    if (onChange) {\n      onChange(name, this.ref.value);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef = (ref) => {\n    this.ref = ref;\n  };\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      name,\n      value,\n      type,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n    } = this.props;\n    return (\n      <fieldset {...css(styles.wrapper)}>\n        <label htmlFor={`input_${name}`} {...css(styles.label, errorMessage && styles.errorLabel)}>\n          {errorMessage || label}\n        </label>\n        <input\n          {...css(\n            styles.input,\n            errorMessage && styles.error,\n            xsmall && styles.xsmall,\n            small && styles.small,\n            large && styles.large,\n            xlarge && styles.xlarge,\n          )}\n          id={`input_${name}`}\n          ref={this.setRef}\n          onChange={this.handleChange}\n          value={value || ''}\n          type={type}\n        />\n      </fieldset>\n    );\n  }\n}\n\nInput.propTypes = {\n  ...withStylesPropTypes,\n  type: PropTypes.oneOf(['text', 'number', 'price']),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool,\n};\n\nInput.defaultProps = {\n  onChange: () => {},\n  autoFocus: false,\n};\n\nexport default withStyles(({ unit, color, size, lineHeight }) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: 'relative',\n  },\n  label: {\n    display: 'block',\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: 'pointer',\n  },\n  input: {\n    marginTop: 2,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    padding: unit * 1.5,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: 'solid',\n    borderRadius: 4,\n    outline: 0,\n    ':focus': {\n      boxShadow: '0 0 0px 2px rgba(0, 0, 0, 0.3)',\n    },\n  },\n  xlarge: {\n    fontSize: size.xg,\n  },\n  large: {\n    fontSize: size.lg,\n  },\n  small: {\n    fontSize: size.sm,\n    padding: unit,\n  },\n  errorLabel: {\n    color: color.error,\n  },\n  error: {\n    borderColor: color.error,\n  },\n}))(Input);\n"]},"metadata":{},"sourceType":"module"}