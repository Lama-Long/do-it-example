{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/TradeCoinPage01.jsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer as ModalConsumer } from '../../../doit-ui/Modal/context';\nimport Form from '../../../doit-ui/Form';\nimport Spacing from '../../../doit-ui/Spacing';\nimport Text from '../../../doit-ui/Text';\nimport Input from '../../../doit-ui/Input';\nimport InlineList from '../../../doit-ui/InlineList';\nimport Button from '../../../doit-ui/Button';\nimport moment from 'moment';\n\nclass TradeCoinPage extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", (values, closeModal) => {\n      const {\n        name,\n        code,\n        createTransaction,\n        requestTransactionList\n      } = this.props;\n      const {\n        amount,\n        currentPrice\n      } = values;\n      const formValues = {\n        code,\n        name,\n        totalPrice: parseInt(currentPrice) * amount,\n        currentPrice: parseInt(currentPrice),\n        dateTime: moment().format('YYYY/MM/DD HH:mm:ss')\n      };\n      createTransaction(formValues, closeModal, requestTransactionList);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      price,\n      type,\n      loading\n    } = this.props;\n    const typeName = type === 'sell' ? '판매' : '구매';\n    return __jsx(ModalConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, ({\n      closeModal\n    }) => __jsx(Form, {\n      onSubmit: values => this.handleSubmit(values, closeModal),\n      initValues: {\n        currentPrice: price\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Consumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, ({\n      onChange,\n      values\n    }) => __jsx(Spacing, {\n      horizontal: 4,\n      vertical: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, __jsx(Text, {\n      xlarge: true,\n      bold: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 19\n      }\n    }, name, \" \", typeName), __jsx(Spacing, {\n      bottom: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      name: \"currentPrice\",\n      label: \"\\uAE08\\uC561\",\n      value: values['currentPrice'],\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })), __jsx(Spacing, {\n      bottom: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, __jsx(Input, {\n      name: \"amount\",\n      label: \"\\uC218\\uB7C9\",\n      value: values['amount'],\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    })), __jsx(InlineList, {\n      spacingBetween: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      primary: true,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, loading ? '거래 처리중' : typeName), __jsx(Button, {\n      onPress: closeModal,\n      disabled: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"\\uCDE8\\uC18C\"))))));\n  }\n\n}\n\nTradeCoinPage.propTypes = {\n  createTransaction: PropTypes.func,\n  loading: PropTypes.bool\n};\nexport default TradeCoinPage;","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/TradeCoinPage01.jsx"],"names":["React","PureComponent","PropTypes","Consumer","ModalConsumer","Form","Spacing","Text","Input","InlineList","Button","moment","TradeCoinPage","values","closeModal","name","code","createTransaction","requestTransactionList","props","amount","currentPrice","formValues","totalPrice","parseInt","dateTime","format","render","price","type","loading","typeName","handleSubmit","onChange","propTypes","func","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer as ModalConsumer } from '../../../doit-ui/Modal/context';\nimport Form from '../../../doit-ui/Form';\nimport Spacing from '../../../doit-ui/Spacing';\nimport Text from '../../../doit-ui/Text';\nimport Input from '../../../doit-ui/Input';\nimport InlineList from '../../../doit-ui/InlineList';\nimport Button from '../../../doit-ui/Button';\nimport moment from 'moment';\n\nclass TradeCoinPage extends PureComponent {\n  handleSubmit = (values, closeModal) => {\n    const { name, code, createTransaction, requestTransactionList } = this.props;\n    const { amount, currentPrice } = values;\n\n    const formValues = {\n      code,\n      name,\n      totalPrice: parseInt(currentPrice) * amount,\n      currentPrice: parseInt(currentPrice),\n      dateTime: moment().format('YYYY/MM/DD HH:mm:ss'),\n    };\n    createTransaction(formValues, closeModal, requestTransactionList);\n  };\n\n  render() {\n    const { name, price, type, loading } = this.props;\n    const typeName = type === 'sell' ? '판매' : '구매';\n    return (\n      <ModalConsumer>\n        {({ closeModal }) => (\n          <Form\n            onSubmit={(values) => this.handleSubmit(values, closeModal)}\n            initValues={{ currentPrice: price }}\n          >\n            <Form.Consumer>\n              {({ onChange, values }) => (\n                <Spacing horizontal={4} vertical={8}>\n                  <Text xlarge bold>\n                    {name} {typeName}\n                  </Text>\n                  <Spacing bottom={2}>\n                    <Input\n                      name=\"currentPrice\"\n                      label=\"금액\"\n                      value={values['currentPrice']}\n                      onChange={onChange}\n                    />\n                  </Spacing>\n                  <Spacing bottom={2}>\n                    <Input\n                      name=\"amount\"\n                      label=\"수량\"\n                      value={values['amount']}\n                      onChange={onChange}\n                    />\n                  </Spacing>\n                  <InlineList spacingBetween={1}>\n                    <Button primary disabled={loading}>\n                      {loading ? '거래 처리중' : typeName}\n                    </Button>\n                    <Button onPress={closeModal} disabled={loading}>\n                      취소\n                    </Button>\n                  </InlineList>\n                </Spacing>\n              )}\n            </Form.Consumer>\n          </Form>\n        )}\n      </ModalConsumer>\n    );\n  }\n}\n\nTradeCoinPage.propTypes = {\n  createTransaction: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nexport default TradeCoinPage;\n"]},"metadata":{},"sourceType":"module"}