{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { HIDE_NOTIFICATION, SHOW_NOTIFICATION } from '../actions/notificationActions';\nconst initState = {\n  message: '',\n  warning: false,\n  showMessage: false\n};\nexport default ((state = initState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SHOW_NOTIFICATION:\n      const {\n        message,\n        warning\n      } = payload;\n      return _objectSpread({}, state, {\n        showMessage: true,\n        message,\n        warning\n      });\n\n    case HIDE_NOTIFICATION:\n      return _objectSpread({}, state, {\n        message: '',\n        showMessage: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/reducers/notificationReducer.js"],"names":["HIDE_NOTIFICATION","SHOW_NOTIFICATION","initState","message","warning","showMessage","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,gCAArD;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAE,EADO;AAEhBC,EAAAA,OAAO,EAAE,KAFO;AAGhBC,EAAAA,WAAW,EAAE;AAHG,CAAlB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,SAAT,EAAoBK,MAApB,KAA+B;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKP,iBAAL;AACE,YAAM;AAAEE,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuBK,OAA7B;AACA,+BACKH,KADL;AAEED,QAAAA,WAAW,EAAE,IAFf;AAGEF,QAAAA,OAHF;AAIEC,QAAAA;AAJF;;AAMF,SAAKJ,iBAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,OAAO,EAAE,EAFX;AAGEE,QAAAA,WAAW,EAAE;AAHf;;AAKF;AACE,aAAOC,KAAP;AAhBJ;AAkBD,CArBD","sourcesContent":["import { HIDE_NOTIFICATION, SHOW_NOTIFICATION } from '../actions/notificationActions';\n\nconst initState = {\n  message: '',\n  warning: false,\n  showMessage: false,\n};\n\nexport default (state = initState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SHOW_NOTIFICATION:\n      const { message, warning } = payload;\n      return {\n        ...state,\n        showMessage: true,\n        message,\n        warning,\n      };\n    case HIDE_NOTIFICATION:\n      return {\n        ...state,\n        message: '',\n        showMessage: false,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}