{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/CoinDashlet.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../../doit-ui/Card';\nimport Heading from '../../../doit-ui/Heading';\nimport Text from '../../../doit-ui/Text';\nimport InlineList from '../../../doit-ui/InlineList';\nimport Button from '../../../doit-ui/Button';\nimport { Consumer as ModalConsumer } from '../../../doit-ui/Modal/context';\nimport { TRADE_COIN_MODAL } from '../../constants/modals';\n\nvar CoinDashlet = /*#__PURE__*/function (_PureComponent) {\n  _inherits(CoinDashlet, _PureComponent);\n\n  var _super = _createSuper(CoinDashlet);\n\n  function CoinDashlet() {\n    _classCallCheck(this, CoinDashlet);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CoinDashlet, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          name = _this$props.name,\n          priceLabel = _this$props.priceLabel,\n          code = _this$props.code;\n      return __jsx(ModalConsumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, function (_ref) {\n        var openModal = _ref.openModal;\n        return __jsx(Card, {\n          vertical: 4,\n          horizontal: 4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }, __jsx(Heading, {\n          level: 4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        }, name, __jsx(Text, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }\n        }, priceLabel)), __jsx(InlineList, {\n          spacingBetween: 1,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        }, __jsx(Button, {\n          primary: true,\n          small: true,\n          onPress: function onPress() {\n            return openModal(TRADE_COIN_MODAL, {\n              type: 'buy',\n              code: code,\n              name: name,\n              price: priceLabel\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }\n        }, \"\\uB9E4\\uB3C4\"), __jsx(Button, {\n          small: true,\n          onPress: function onPress() {\n            return openModal(TRADE_COIN_MODAL, {\n              type: 'sell',\n              code: code,\n              name: name,\n              price: priceLabel\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, \"\\uB9E4\\uC218\")));\n      });\n    }\n  }]);\n\n  return CoinDashlet;\n}(PureComponent);\n\nCoinDashlet.propTypes = {\n  name: PropTypes.string,\n  priceLabel: PropTypes.string\n};\nexport default CoinDashlet;","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/components/main/CoinDashlet.jsx"],"names":["React","PureComponent","PropTypes","Card","Heading","Text","InlineList","Button","Consumer","ModalConsumer","TRADE_COIN_MODAL","CoinDashlet","props","name","priceLabel","code","openModal","type","price","propTypes","string"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,gCAA1C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;;IAEMC,W;;;;;;;;;;;;;WACJ,kBAAS;AAAA;;AACP,wBAAmC,KAAKC,KAAxC;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,UAAd,eAAcA,UAAd;AAAA,UAA0BC,IAA1B,eAA0BA,IAA1B;AACA,aACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,YAAGC,SAAH,QAAGA,SAAH;AAAA,eACC,MAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,CAAhB;AAAmB,UAAA,UAAU,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,OAAD;AAAS,UAAA,KAAK,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGH,IADH,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOC,UAAP,CAFF,CADF,EAKE,MAAC,UAAD;AAAY,UAAA,cAAc,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,MAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,KAAK,MAFP;AAGE,UAAA,OAAO,EAAE;AAAA,mBACPE,SAAS,CAACN,gBAAD,EAAmB;AAAEO,cAAAA,IAAI,EAAE,KAAR;AAAeF,cAAAA,IAAI,EAAJA,IAAf;AAAqBF,cAAAA,IAAI,EAAJA,IAArB;AAA2BK,cAAAA,KAAK,EAAEJ;AAAlC,aAAnB,CADF;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAUE,MAAC,MAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,OAAO,EAAE;AAAA,mBACPE,SAAS,CAACN,gBAAD,EAAmB;AAAEO,cAAAA,IAAI,EAAE,MAAR;AAAgBF,cAAAA,IAAI,EAAJA,IAAhB;AAAsBF,cAAAA,IAAI,EAAJA,IAAtB;AAA4BK,cAAAA,KAAK,EAAEJ;AAAnC,aAAnB,CADF;AAAA,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAVF,CALF,CADD;AAAA,OADH,CADF;AA+BD;;;;EAlCuBb,a;;AAqC1BU,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,IAAI,EAAEX,SAAS,CAACkB,MADM;AAEtBN,EAAAA,UAAU,EAAEZ,SAAS,CAACkB;AAFA,CAAxB;AAKA,eAAeT,WAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../../doit-ui/Card';\nimport Heading from '../../../doit-ui/Heading';\nimport Text from '../../../doit-ui/Text';\nimport InlineList from '../../../doit-ui/InlineList';\nimport Button from '../../../doit-ui/Button';\nimport { Consumer as ModalConsumer } from '../../../doit-ui/Modal/context';\nimport { TRADE_COIN_MODAL } from '../../constants/modals';\n\nclass CoinDashlet extends PureComponent {\n  render() {\n    const { name, priceLabel, code } = this.props;\n    return (\n      <ModalConsumer>\n        {({ openModal }) => (\n          <Card vertical={4} horizontal={4}>\n            <Heading level={4}>\n              {name}\n              <Text>{priceLabel}</Text>\n            </Heading>\n            <InlineList spacingBetween={1}>\n              <Button\n                primary\n                small\n                onPress={() =>\n                  openModal(TRADE_COIN_MODAL, { type: 'buy', code, name, price: priceLabel })\n                }\n              >\n                매도\n              </Button>\n              <Button\n                small\n                onPress={() =>\n                  openModal(TRADE_COIN_MODAL, { type: 'sell', code, name, price: priceLabel })\n                }\n              >\n                매수\n              </Button>\n            </InlineList>\n          </Card>\n        )}\n      </ModalConsumer>\n    );\n  }\n}\n\nCoinDashlet.propTypes = {\n  name: PropTypes.string,\n  priceLabel: PropTypes.string,\n};\n\nexport default CoinDashlet;\n"]},"metadata":{},"sourceType":"module"}