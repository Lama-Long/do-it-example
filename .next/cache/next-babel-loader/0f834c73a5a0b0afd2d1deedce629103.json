{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from '../reducers';\nimport thunk from 'redux-thunk';\nimport notificationEffects from '../middlewares/notificationEffects';\nimport { middleware as reduxPackMiddleware } from 'redux-pack';\nimport searchFilterEffects from '../middlewares/searchFilterEffects';\nimport routerEffects from '../middlewares/routerEffects';\nexport default (function (initStates) {\n  return createStore(combineReducers(reducers), initStates, composeWithDevTools(applyMiddleware(thunk, reduxPackMiddleware, searchFilterEffects, notificationEffects, routerEffects)));\n});","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/store/configureStore.js"],"names":["applyMiddleware","combineReducers","createStore","composeWithDevTools","reducers","thunk","notificationEffects","middleware","reduxPackMiddleware","searchFilterEffects","routerEffects","initStates"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,UAAU,IAAIC,mBAAvB,QAAkD,YAAlD;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,gBAAe,UAACC,UAAD;AAAA,SACbT,WAAW,CACTD,eAAe,CAACG,QAAD,CADN,EAETO,UAFS,EAGTR,mBAAmB,CACjBH,eAAe,CACbK,KADa,EAEbG,mBAFa,EAGbC,mBAHa,EAIbH,mBAJa,EAKbI,aALa,CADE,CAHV,CADE;AAAA,CAAf","sourcesContent":["import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from '../reducers';\nimport thunk from 'redux-thunk';\nimport notificationEffects from '../middlewares/notificationEffects';\nimport { middleware as reduxPackMiddleware } from 'redux-pack';\nimport searchFilterEffects from '../middlewares/searchFilterEffects';\nimport routerEffects from '../middlewares/routerEffects';\n\nexport default (initStates) =>\n  createStore(\n    combineReducers(reducers),\n    initStates,\n    composeWithDevTools(\n      applyMiddleware(\n        thunk,\n        reduxPackMiddleware,\n        searchFilterEffects,\n        notificationEffects,\n        routerEffects,\n      ),\n    ),\n  );\n"]},"metadata":{},"sourceType":"module"}