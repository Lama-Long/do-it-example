{"ast":null,"code":"var _jsxFileName = \"/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Form.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nconst {\n  Consumer,\n  Provider\n} = React.createContext({});\n\nclass FormProvider extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      const {\n        values,\n        errors\n      } = this.state;\n      e.preventDefault();\n\n      if (Object.values(errors).length === 0) {\n        this.props.onSubmit(values);\n      }\n    });\n\n    _defineProperty(this, \"onChange\", (name, updatedValue) => {\n      this.setState(({\n        values\n      }) => ({\n        values: _objectSpread({}, values, {\n          [name]: updatedValue\n        })\n      }), () => this.validate(this.state.values));\n    });\n\n    _defineProperty(this, \"reset\", () => {\n      this.setState({\n        values: {}\n      });\n    });\n\n    _defineProperty(this, \"validate\", values => {\n      const {\n        validate\n      } = this.props;\n\n      if (!validate) {\n        return;\n      }\n\n      const errors = this.props.validate(values);\n      this.setState({\n        errors\n      });\n    });\n  }\n\n  static getDerivedStateFromProps({\n    initValues\n  }, prevState) {\n    const values = initValues !== prevState.initValues ? initValues : prevState.values;\n    return {\n      initValues,\n      values,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      values,\n      errors\n    } = this.state;\n    return __jsx(Provider, {\n      value: {\n        errors,\n        values,\n        onChange: this.onChange,\n        reset: this.reset\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, this.props.children));\n  }\n\n}\n\n_defineProperty(FormProvider, \"Consumer\", Consumer);\n\nFormProvider.propTypes = {\n  validate: PropTypes.func,\n  onSubmit: PropTypes.func,\n  initValues: PropTypes.object\n};\nFormProvider.defaultProps = {\n  initValues: {},\n  validate: () => ({})\n};\nexport default FormProvider;","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/doit-ui/Form.jsx"],"names":["React","PureComponent","PropTypes","Consumer","Provider","createContext","FormProvider","e","values","errors","state","preventDefault","Object","length","props","onSubmit","name","updatedValue","setState","validate","getDerivedStateFromProps","initValues","prevState","render","onChange","reset","handleSubmit","children","propTypes","func","object","defaultProps"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAM;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAyBJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAA/B;;AAEA,MAAMC,YAAN,SAA2BL,aAA3B,CAAyC;AAAA;AAAA;;AAAA,mCAY/B,EAZ+B;;AAAA,0CAcvBM,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA,MAAF;AAAUC,QAAAA;AAAV,UAAqB,KAAKC,KAAhC;AACAH,MAAAA,CAAC,CAACI,cAAF;;AACA,UAAIC,MAAM,CAACJ,MAAP,CAAcC,MAAd,EAAsBI,MAAtB,KAAiC,CAArC,EAAwC;AACtC,aAAKC,KAAL,CAAWC,QAAX,CAAoBP,MAApB;AACD;AACF,KApBsC;;AAAA,sCAsB5B,CAACQ,IAAD,EAAOC,YAAP,KAAwB;AACjC,WAAKC,QAAL,CACE,CAAC;AAAEV,QAAAA;AAAF,OAAD,MAAiB;AACfA,QAAAA,MAAM,oBACDA,MADC;AAEJ,WAACQ,IAAD,GAAQC;AAFJ;AADS,OAAjB,CADF,EAOE,MAAM,KAAKE,QAAL,CAAc,KAAKT,KAAL,CAAWF,MAAzB,CAPR;AASD,KAhCsC;;AAAA,mCAkC/B,MAAM;AACZ,WAAKU,QAAL,CAAc;AAAEV,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KApCsC;;AAAA,sCAsC3BA,MAAD,IAAY;AACrB,YAAM;AAAEW,QAAAA;AAAF,UAAe,KAAKL,KAA1B;;AACA,UAAI,CAACK,QAAL,EAAe;AACb;AACD;;AACD,YAAMV,MAAM,GAAG,KAAKK,KAAL,CAAWK,QAAX,CAAoBX,MAApB,CAAf;AACA,WAAKU,QAAL,CAAc;AAAET,QAAAA;AAAF,OAAd;AACD,KA7CsC;AAAA;;AAER,SAAxBW,wBAAwB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAiBC,SAAjB,EAA4B;AACzD,UAAMd,MAAM,GAAGa,UAAU,KAAKC,SAAS,CAACD,UAAzB,GAAsCA,UAAtC,GAAmDC,SAAS,CAACd,MAA5E;AAEA,WAAO;AACLa,MAAAA,UADK;AAELb,MAAAA,MAFK;AAGLC,MAAAA,MAAM,EAAE;AAHH,KAAP;AAKD;;AAqCDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAqB,KAAKC,KAAhC;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAF;AAAUD,QAAAA,MAAV;AAAkBgB,QAAAA,QAAQ,EAAE,KAAKA,QAAjC;AAA2CC,QAAAA,KAAK,EAAE,KAAKA;AAAvD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoC,KAAKZ,KAAL,CAAWa,QAA/C,CADF,CADF;AAKD;;AAtDsC;;gBAAnCrB,Y,cACcH,Q;;AAwDpBG,YAAY,CAACsB,SAAb,GAAyB;AACvBT,EAAAA,QAAQ,EAAEjB,SAAS,CAAC2B,IADG;AAEvBd,EAAAA,QAAQ,EAAEb,SAAS,CAAC2B,IAFG;AAGvBR,EAAAA,UAAU,EAAEnB,SAAS,CAAC4B;AAHC,CAAzB;AAMAxB,YAAY,CAACyB,YAAb,GAA4B;AAC1BV,EAAAA,UAAU,EAAE,EADc;AAE1BF,EAAAA,QAAQ,EAAE,OAAO,EAAP;AAFgB,CAA5B;AAKA,eAAeb,YAAf","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nconst { Consumer, Provider } = React.createContext({});\n\nclass FormProvider extends PureComponent {\n  static Consumer = Consumer;\n  static getDerivedStateFromProps({ initValues }, prevState) {\n    const values = initValues !== prevState.initValues ? initValues : prevState.values;\n\n    return {\n      initValues,\n      values,\n      errors: {},\n    };\n  }\n\n  state = {};\n\n  handleSubmit = (e) => {\n    const { values, errors } = this.state;\n    e.preventDefault();\n    if (Object.values(errors).length === 0) {\n      this.props.onSubmit(values);\n    }\n  };\n\n  onChange = (name, updatedValue) => {\n    this.setState(\n      ({ values }) => ({\n        values: {\n          ...values,\n          [name]: updatedValue,\n        },\n      }),\n      () => this.validate(this.state.values),\n    );\n  };\n\n  reset = () => {\n    this.setState({ values: {} });\n  };\n\n  validate = (values) => {\n    const { validate } = this.props;\n    if (!validate) {\n      return;\n    }\n    const errors = this.props.validate(values);\n    this.setState({ errors });\n  };\n\n  render() {\n    const { values, errors } = this.state;\n    return (\n      <Provider value={{ errors, values, onChange: this.onChange, reset: this.reset }}>\n        <form onSubmit={this.handleSubmit}>{this.props.children}</form>\n      </Provider>\n    );\n  }\n}\n\nFormProvider.propTypes = {\n  validate: PropTypes.func,\n  onSubmit: PropTypes.func,\n  initValues: PropTypes.object,\n};\n\nFormProvider.defaultProps = {\n  initValues: {},\n  validate: () => ({}),\n};\n\nexport default FormProvider;\n"]},"metadata":{},"sourceType":"module"}