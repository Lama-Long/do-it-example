{"ast":null,"code":"import { hideMessage, SHOW_NOTIFICATION, showMessage } from '../actions/notificationActions';\nimport { debounce } from '../../02/debounce';\nimport { KEY, LIFECYCLE } from 'redux-pack';\nimport { FETCH_TRANSACTION_LIST } from '../actions/transactionPackActions';\nvar debounceRunner = debounce(function (action) {\n  return action();\n}, 2000);\nexport default (function (store) {\n  return function (nextRunner) {\n    return function (action) {\n      var type = action.type,\n          meta = action.meta;\n\n      if (meta && meta.notification) {\n        var _meta$notification = meta.notification,\n            success = _meta$notification.success,\n            error = _meta$notification.error;\n\n        if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n          store.dispatch(showMessage(success));\n        } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n          store.dispatch(showMessage(error, true));\n        } else if (type === FETCH_TRANSACTION_LIST && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n          var message = '거래 목록을 최신 정보로 업데이트 했습니다.';\n          store.dispatch(showMessage(message));\n        }\n      } else if (type === SHOW_NOTIFICATION) {\n        var hide = function hide() {\n          return store.dispatch(hideMessage());\n        };\n\n        debounceRunner(hide);\n      }\n\n      return nextRunner(action);\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"module"}