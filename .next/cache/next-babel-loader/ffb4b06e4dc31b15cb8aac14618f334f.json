{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_LOCATION } from '../actions/routerActions';\nimport { setFilter } from '../actions/searchFilterActions';\n\nfunction parse(qs) {\n  var quertString = qs.substr(1);\n  var chunks = quertString.split('&');\n  return chunks.map(function (chunk) {\n    return chunk.split('=');\n  }).reduce(function (result, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return _objectSpread({}, result, _defineProperty({}, key, value));\n  }, {});\n}\n\nexport default (function (store) {\n  return function (nextRunner) {\n    return function (action) {\n      var type = action.type,\n          payload = action.payload;\n      var result = nextRunner(action);\n\n      if (type === SET_LOCATION) {\n        var _payload$location = payload.location,\n            pathname = _payload$location.pathname,\n            search = _payload$location.search;\n\n        if (pathname === '/') {\n          store.dispatch(setFilter(parse(search)));\n        }\n      }\n\n      return result;\n    };\n  };\n});","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/08/middlewares/routerEffects.js"],"names":["SET_LOCATION","setFilter","parse","qs","quertString","substr","chunks","split","map","chunk","reduce","result","key","value","store","nextRunner","action","type","payload","location","pathname","search","dispatch"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,0BAA7B;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,SAASC,KAAT,CAAeC,EAAf,EAAmB;AACjB,MAAMC,WAAW,GAAGD,EAAE,CAACE,MAAH,CAAU,CAAV,CAApB;AACA,MAAMC,MAAM,GAAGF,WAAW,CAACG,KAAZ,CAAkB,GAAlB,CAAf;AACA,SAAOD,MAAM,CACVE,GADI,CACA,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACF,KAAN,CAAY,GAAZ,CAAX;AAAA,GADA,EAEJG,MAFI,CAEG,UAACC,MAAD;AAAA;AAAA,QAAUC,GAAV;AAAA,QAAeC,KAAf;;AAAA,6BAAgCF,MAAhC,sBAAyCC,GAAzC,EAA+CC,KAA/C;AAAA,GAFH,EAE4D,EAF5D,CAAP;AAGD;;AAED,gBAAe,UAACC,KAAD;AAAA,SAAW,UAACC,UAAD;AAAA,WAAgB,UAACC,MAAD,EAAY;AACpD,UAAQC,IAAR,GAA0BD,MAA1B,CAAQC,IAAR;AAAA,UAAcC,OAAd,GAA0BF,MAA1B,CAAcE,OAAd;AACA,UAAMP,MAAM,GAAGI,UAAU,CAACC,MAAD,CAAzB;;AACA,UAAIC,IAAI,KAAKjB,YAAb,EAA2B;AACzB,gCAA6BkB,OAAO,CAACC,QAArC;AAAA,YAAQC,QAAR,qBAAQA,QAAR;AAAA,YAAkBC,MAAlB,qBAAkBA,MAAlB;;AACA,YAAID,QAAQ,KAAK,GAAjB,EAAsB;AACpBN,UAAAA,KAAK,CAACQ,QAAN,CAAerB,SAAS,CAACC,KAAK,CAACmB,MAAD,CAAN,CAAxB;AACD;AACF;;AACD,aAAOV,MAAP;AACD,KAVyB;AAAA,GAAX;AAAA,CAAf","sourcesContent":["import { SET_LOCATION } from '../actions/routerActions';\nimport { setFilter } from '../actions/searchFilterActions';\n\nfunction parse(qs) {\n  const quertString = qs.substr(1);\n  const chunks = quertString.split('&');\n  return chunks\n    .map((chunk) => chunk.split('='))\n    .reduce((result, [key, value]) => ({ ...result, [key]: value }), {});\n}\n\nexport default (store) => (nextRunner) => (action) => {\n  const { type, payload } = action;\n  const result = nextRunner(action);\n  if (type === SET_LOCATION) {\n    const { pathname, search } = payload.location;\n    if (pathname === '/') {\n      store.dispatch(setFilter(parse(search)));\n    }\n  }\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}