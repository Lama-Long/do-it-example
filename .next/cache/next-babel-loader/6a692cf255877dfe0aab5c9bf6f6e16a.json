{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { CREATE, FETCH, FETCH_LIST, UPDATE } from './actionTypes';\nexport default function createSelectors(resourceName) {\n  const resourceSelector = state => state[resourceName];\n\n  const entitiesSelector = state => resourceSelector(state).entities;\n\n  const collectionSelector = createSelector([resourceSelector], ({\n    ids,\n    entities\n  }) => ids.map(id => entities[id]));\n\n  const loadingStateSelector = state => resourceSelector(state).loadingState;\n\n  const errorStateSelector = state => resourceSelector(state).errorState;\n\n  const collectionLoadingStateSelector = state => loadingStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\n\n  const createLoadingStateSelector = state => loadingStateSelector(state)[`${CREATE}/${resourceName}`];\n\n  const updateLoadingStateSelector = state => loadingStateSelector(state)[`${UPDATE}/${resourceName}`];\n\n  const memberLoadingStateSelector = state => loadingStateSelector(state)[`${FETCH}/${resourceName}`];\n\n  const collectionErrorStateSelector = state => errorStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\n\n  const createErrorStateSelector = state => errorStateSelector(state)[`${CREATE}/${resourceName}`];\n\n  const updateErrorStateSelector = state => errorStateSelector(state)[`${UPDATE}/${resourceName}`];\n\n  const memberErrorStateSelector = state => errorStateSelector(state)[`${FETCH}/${resourceName}`];\n\n  const paginationSelector = state => {\n    const {\n      pagination\n    } = resourceSelector(state);\n    return {\n      number: pagination.number || 0,\n      size: pagination.size\n    };\n  };\n\n  return {\n    resourceSelector,\n    entitiesSelector,\n    collectionSelector,\n    collectionLoadingStateSelector,\n    createLoadingStateSelector,\n    updateLoadingStateSelector,\n    memberLoadingStateSelector,\n    collectionErrorStateSelector,\n    createErrorStateSelector,\n    updateErrorStateSelector,\n    memberErrorStateSelector,\n    paginationSelector\n  };\n}","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/11/api-redux-pack/createSelectors.js"],"names":["createSelector","CREATE","FETCH","FETCH_LIST","UPDATE","createSelectors","resourceName","resourceSelector","state","entitiesSelector","entities","collectionSelector","ids","map","id","loadingStateSelector","loadingState","errorStateSelector","errorState","collectionLoadingStateSelector","createLoadingStateSelector","updateLoadingStateSelector","memberLoadingStateSelector","collectionErrorStateSelector","createErrorStateSelector","updateErrorStateSelector","memberErrorStateSelector","paginationSelector","pagination","number","size"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,UAAxB,EAAoCC,MAApC,QAAkD,eAAlD;AAEA,eAAe,SAASC,eAAT,CAAyBC,YAAzB,EAAuC;AACpD,QAAMC,gBAAgB,GAAIC,KAAD,IAAWA,KAAK,CAACF,YAAD,CAAzC;;AACA,QAAMG,gBAAgB,GAAID,KAAD,IAAWD,gBAAgB,CAACC,KAAD,CAAhB,CAAwBE,QAA5D;;AACA,QAAMC,kBAAkB,GAAGX,cAAc,CAAC,CAACO,gBAAD,CAAD,EAAqB,CAAC;AAAEK,IAAAA,GAAF;AAAOF,IAAAA;AAAP,GAAD,KAC5DE,GAAG,CAACC,GAAJ,CAASC,EAAD,IAAQJ,QAAQ,CAACI,EAAD,CAAxB,CADuC,CAAzC;;AAGA,QAAMC,oBAAoB,GAAIP,KAAD,IAAWD,gBAAgB,CAACC,KAAD,CAAhB,CAAwBQ,YAAhE;;AACA,QAAMC,kBAAkB,GAAIT,KAAD,IAAWD,gBAAgB,CAACC,KAAD,CAAhB,CAAwBU,UAA9D;;AAEA,QAAMC,8BAA8B,GAAIX,KAAD,IACrCO,oBAAoB,CAACP,KAAD,CAApB,CAA6B,GAAEL,UAAW,IAAGG,YAAa,EAA1D,CADF;;AAEA,QAAMc,0BAA0B,GAAIZ,KAAD,IACjCO,oBAAoB,CAACP,KAAD,CAApB,CAA6B,GAAEP,MAAO,IAAGK,YAAa,EAAtD,CADF;;AAEA,QAAMe,0BAA0B,GAAIb,KAAD,IACjCO,oBAAoB,CAACP,KAAD,CAApB,CAA6B,GAAEJ,MAAO,IAAGE,YAAa,EAAtD,CADF;;AAEA,QAAMgB,0BAA0B,GAAId,KAAD,IACjCO,oBAAoB,CAACP,KAAD,CAApB,CAA6B,GAAEN,KAAM,IAAGI,YAAa,EAArD,CADF;;AAGA,QAAMiB,4BAA4B,GAAIf,KAAD,IACnCS,kBAAkB,CAACT,KAAD,CAAlB,CAA2B,GAAEL,UAAW,IAAGG,YAAa,EAAxD,CADF;;AAEA,QAAMkB,wBAAwB,GAAIhB,KAAD,IAC/BS,kBAAkB,CAACT,KAAD,CAAlB,CAA2B,GAAEP,MAAO,IAAGK,YAAa,EAApD,CADF;;AAEA,QAAMmB,wBAAwB,GAAIjB,KAAD,IAC/BS,kBAAkB,CAACT,KAAD,CAAlB,CAA2B,GAAEJ,MAAO,IAAGE,YAAa,EAApD,CADF;;AAEA,QAAMoB,wBAAwB,GAAIlB,KAAD,IAAWS,kBAAkB,CAACT,KAAD,CAAlB,CAA2B,GAAEN,KAAM,IAAGI,YAAa,EAAnD,CAA5C;;AAEA,QAAMqB,kBAAkB,GAAInB,KAAD,IAAW;AACpC,UAAM;AAAEoB,MAAAA;AAAF,QAAiBrB,gBAAgB,CAACC,KAAD,CAAvC;AACA,WAAO;AACLqB,MAAAA,MAAM,EAAED,UAAU,CAACC,MAAX,IAAqB,CADxB;AAELC,MAAAA,IAAI,EAAEF,UAAU,CAACE;AAFZ,KAAP;AAID,GAND;;AAQA,SAAO;AACLvB,IAAAA,gBADK;AAELE,IAAAA,gBAFK;AAGLE,IAAAA,kBAHK;AAILQ,IAAAA,8BAJK;AAKLC,IAAAA,0BALK;AAMLC,IAAAA,0BANK;AAOLC,IAAAA,0BAPK;AAQLC,IAAAA,4BARK;AASLC,IAAAA,wBATK;AAULC,IAAAA,wBAVK;AAWLC,IAAAA,wBAXK;AAYLC,IAAAA;AAZK,GAAP;AAcD","sourcesContent":["import { createSelector } from 'reselect';\nimport { CREATE, FETCH, FETCH_LIST, UPDATE } from './actionTypes';\n\nexport default function createSelectors(resourceName) {\n  const resourceSelector = (state) => state[resourceName];\n  const entitiesSelector = (state) => resourceSelector(state).entities;\n  const collectionSelector = createSelector([resourceSelector], ({ ids, entities }) =>\n    ids.map((id) => entities[id]),\n  );\n  const loadingStateSelector = (state) => resourceSelector(state).loadingState;\n  const errorStateSelector = (state) => resourceSelector(state).errorState;\n\n  const collectionLoadingStateSelector = (state) =>\n    loadingStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\n  const createLoadingStateSelector = (state) =>\n    loadingStateSelector(state)[`${CREATE}/${resourceName}`];\n  const updateLoadingStateSelector = (state) =>\n    loadingStateSelector(state)[`${UPDATE}/${resourceName}`];\n  const memberLoadingStateSelector = (state) =>\n    loadingStateSelector(state)[`${FETCH}/${resourceName}`];\n\n  const collectionErrorStateSelector = (state) =>\n    errorStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\n  const createErrorStateSelector = (state) =>\n    errorStateSelector(state)[`${CREATE}/${resourceName}`];\n  const updateErrorStateSelector = (state) =>\n    errorStateSelector(state)[`${UPDATE}/${resourceName}`];\n  const memberErrorStateSelector = (state) => errorStateSelector(state)[`${FETCH}/${resourceName}`];\n\n  const paginationSelector = (state) => {\n    const { pagination } = resourceSelector(state);\n    return {\n      number: pagination.number || 0,\n      size: pagination.size,\n    };\n  };\n\n  return {\n    resourceSelector,\n    entitiesSelector,\n    collectionSelector,\n    collectionLoadingStateSelector,\n    createLoadingStateSelector,\n    updateLoadingStateSelector,\n    memberLoadingStateSelector,\n    collectionErrorStateSelector,\n    createErrorStateSelector,\n    updateErrorStateSelector,\n    memberErrorStateSelector,\n    paginationSelector,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}