{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CREATE, FETCH, FETCH_LIST, RESET, UPDATE } from './actionTypes';\nimport { handle } from 'redux-pack';\nexport default (function () {\n  for (var _len = arguments.length, reducerNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    reducerNames[_key] = arguments[_key];\n  }\n\n  return reducerNames.reduce(function (apiReducers, name) {\n    var _loadingState, _errorState;\n\n    var initState = {\n      ids: [],\n      entities: {},\n      loadingState: (_loadingState = {}, _defineProperty(_loadingState, \"\".concat(CREATE, \"/\").concat(name), false), _defineProperty(_loadingState, \"\".concat(UPDATE, \"/\").concat(name), false), _defineProperty(_loadingState, \"\".concat(FETCH, \"/\").concat(name), false), _defineProperty(_loadingState, \"\".concat(FETCH_LIST, \"/\").concat(name), false), _loadingState),\n      errorState: (_errorState = {}, _defineProperty(_errorState, \"\".concat(CREATE, \"/\").concat(name), false), _defineProperty(_errorState, \"\".concat(UPDATE, \"/\").concat(name), false), _defineProperty(_errorState, \"\".concat(FETCH, \"/\").concat(name), false), _defineProperty(_errorState, \"\".concat(FETCH_LIST, \"/\").concat(name), false), _errorState),\n      pagination: {}\n    };\n\n    apiReducers[name] = function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n      var action = arguments.length > 1 ? arguments[1] : undefined;\n      var type = action.type,\n          payload = action.payload,\n          meta = action.meta;\n\n      var _ref = meta || {},\n          resourceName = _ref.resourceName,\n          key = _ref.key;\n\n      if (resourceName !== name) {\n        return state;\n      }\n\n      switch (type) {\n        case UPDATE:\n        case FETCH:\n        case CREATE:\n        case FETCH_LIST:\n          return handle(state, action, {\n            start: function start(prevState) {\n              return _objectSpread({}, prevState, {\n                loadingState: _objectSpread({}, prevState.loadingState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), true)),\n                errorState: _objectSpread({}, prevState.errorState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), true))\n              });\n            },\n            success: function success(prevState) {\n              var data = payload.data;\n\n              if (type === FETCH_LIST) {\n                var _ref2 = meta || {},\n                    pageNumber = _ref2.pageNumber,\n                    pageSize = _ref2.pageSize;\n\n                var ids = data.map(function (entity) {\n                  return entity[key];\n                });\n                var entities = data.reduce(function (finalEntities, entity) {\n                  return _objectSpread({}, finalEntities, _defineProperty({}, entity[key], entity));\n                }, {});\n                return _objectSpread({}, prevState, {\n                  ids: ids,\n                  entities: _objectSpread({}, prevState.entities, {}, entities),\n                  loadingState: _objectSpread({}, prevState.loadingState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), false)),\n                  errorState: _objectSpread({}, prevState.errorState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), false)),\n                  pagination: {\n                    number: pageNumber,\n                    size: pageSize\n                  }\n                });\n              } else {\n                var id = data[key];\n                return _objectSpread({}, prevState, {\n                  id: id,\n                  entities: _objectSpread({}, prevState.entities, _defineProperty({}, id, data)),\n                  loadingState: _objectSpread({}, prevState.loadingState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), false)),\n                  errorState: _objectSpread({}, prevState.errorState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), false))\n                });\n              }\n            },\n            failure: function failure(prevState) {\n              var _ref3 = payload.response ? payload.response.data : {},\n                  errorMessage = _ref3.errorMessage;\n\n              return _objectSpread({}, prevState, {\n                loadingState: _objectSpread({}, prevState.loadingState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), false)),\n                errorState: _objectSpread({}, prevState.errorState, _defineProperty({}, \"\".concat(type, \"/\").concat(name), errorMessage || true))\n              });\n            }\n          });\n\n        case RESET:\n          return initState;\n\n        default:\n          return state;\n      }\n    };\n\n    return apiReducers;\n  }, {});\n});","map":{"version":3,"sources":["/Volumes/Workstation/dev_wooseok/react/do-it-example/src/11/api-redux-pack/createReducers.js"],"names":["CREATE","FETCH","FETCH_LIST","RESET","UPDATE","handle","reducerNames","reduce","apiReducers","name","initState","ids","entities","loadingState","errorState","pagination","state","action","type","payload","meta","resourceName","key","start","prevState","success","data","pageNumber","pageSize","map","entity","finalEntities","number","size","id","failure","response","errorMessage"],"mappings":"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","sourcesContent":["import { CREATE, FETCH, FETCH_LIST, RESET, UPDATE } from './actionTypes';\nimport { handle } from 'redux-pack';\n\nexport default (...reducerNames) => {\n  return reducerNames.reduce((apiReducers, name) => {\n    const initState = {\n      ids: [],\n      entities: {},\n      loadingState: {\n        [`${CREATE}/${name}`]: false,\n        [`${UPDATE}/${name}`]: false,\n        [`${FETCH}/${name}`]: false,\n        [`${FETCH_LIST}/${name}`]: false,\n      },\n      errorState: {\n        [`${CREATE}/${name}`]: false,\n        [`${UPDATE}/${name}`]: false,\n        [`${FETCH}/${name}`]: false,\n        [`${FETCH_LIST}/${name}`]: false,\n      },\n      pagination: {},\n    };\n    apiReducers[name] = (state = initState, action) => {\n      const { type, payload, meta } = action;\n      const { resourceName, key } = meta || {};\n      if (resourceName !== name) {\n        return state;\n      }\n      switch (type) {\n        case UPDATE:\n        case FETCH:\n        case CREATE:\n        case FETCH_LIST:\n          return handle(state, action, {\n            start: (prevState) => ({\n              ...prevState,\n              loadingState: {\n                ...prevState.loadingState,\n                [`${type}/${name}`]: true,\n              },\n              errorState: {\n                ...prevState.errorState,\n                [`${type}/${name}`]: true,\n              },\n            }),\n            success: (prevState) => {\n              const { data } = payload;\n              if (type === FETCH_LIST) {\n                const { pageNumber, pageSize } = meta || {};\n                const ids = data.map((entity) => entity[key]);\n                const entities = data.reduce(\n                  (finalEntities, entity) => ({\n                    ...finalEntities,\n                    [entity[key]]: entity,\n                  }),\n                  {},\n                );\n                return {\n                  ...prevState,\n                  ids,\n                  entities: { ...prevState.entities, ...entities },\n                  loadingState: {\n                    ...prevState.loadingState,\n                    [`${type}/${name}`]: false,\n                  },\n                  errorState: {\n                    ...prevState.errorState,\n                    [`${type}/${name}`]: false,\n                  },\n                  pagination: {\n                    number: pageNumber,\n                    size: pageSize,\n                  },\n                };\n              } else {\n                const id = data[key];\n                return {\n                  ...prevState,\n                  id,\n                  entities: { ...prevState.entities, [id]: data },\n                  loadingState: {\n                    ...prevState.loadingState,\n                    [`${type}/${name}`]: false,\n                  },\n                  errorState: {\n                    ...prevState.errorState,\n                    [`${type}/${name}`]: false,\n                  },\n                };\n              }\n            },\n            failure: (prevState) => {\n              const { errorMessage } = payload.response ? payload.response.data : {};\n              return {\n                ...prevState,\n                loadingState: {\n                  ...prevState.loadingState,\n                  [`${type}/${name}`]: false,\n                },\n                errorState: {\n                  ...prevState.errorState,\n                  [`${type}/${name}`]: errorMessage || true,\n                },\n              };\n            },\n          });\n        case RESET:\n          return initState;\n        default:\n          return state;\n      }\n    };\n    return apiReducers;\n  }, {});\n};\n"]},"metadata":{},"sourceType":"module"}